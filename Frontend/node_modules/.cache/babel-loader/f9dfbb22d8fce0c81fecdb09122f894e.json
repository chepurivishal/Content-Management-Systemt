{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VISHAL\\\\Desktop\\\\nyx project\\\\Frontend\\\\src\\\\Header\\\\index.js\";\nimport React, { useContext, useState } from \"react\";\nimport LoginContext from \"../context/loginContext\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink, Button, Badge, ButtonGroup } from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Header = props => {\n  const loginContext = useContext(LoginContext);\n  const {\n    isLoggedIn,\n    toggleLogIn\n  } = useContext(LoginContext);\n  let history = useHistory();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    toggleLogIn();\n    history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    color: \"info\",\n    expand: \"lg\",\n    fixed: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavbarBrand, {\n    className: \"navbar-brand\",\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Content Management System\")), /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), loginContext.isLoggedIn ? /*#__PURE__*/React.createElement(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, localStorage.getItem(\"user\"))) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, loginContext.isLoggedIn ? /*#__PURE__*/React.createElement(Button, {\n    color: \"white\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"LOGOUT\") : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    color: \"white\",\n    onClick: () => history.push(\"/login\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"LOGIN\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    color: \"white\",\n    onClick: () => history.push(\"/signup\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"SIGNUP\"))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/VISHAL/Desktop/nyx project/Frontend/src/Header/index.js"],"names":["React","useContext","useState","LoginContext","Navbar","NavbarBrand","Nav","NavItem","NavLink","Button","Badge","ButtonGroup","Link","useHistory","Header","props","loginContext","isLoggedIn","toggleLogIn","history","handleLogout","localStorage","removeItem","push","getItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,GAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,KAPF,EAQEC,WARF,QASO,YATP;AAUA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAMC,YAAY,GAAGf,UAAU,CAACE,YAAD,CAA/B;AACA,QAAM;AAAEc,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA8BjB,UAAU,CAACE,YAAD,CAA9C;AAEA,MAAIgB,OAAO,GAAGN,UAAU,EAAxB;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAJ,IAAAA,WAAW;AACXC,IAAAA,OAAO,CAACI,IAAR,CAAa,QAAb;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,MAAM,EAAC,IAA5B;AAAiC,IAAA,KAAK,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,cAAvB;AAAsC,IAAA,IAAI,EAAC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAMGP,YAAY,CAACC,UAAb,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUI,YAAY,CAACG,OAAb,CAAqB,MAArB,CAAV,CADF,CADD,gBAKC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAaE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,YAAY,CAACC,UAAb,gBACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAEG,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACI,IAAR,CAAa,QAAb,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAQE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAE,MAAMJ,OAAO,CAACI,IAAR,CAAa,SAAb,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF,CANJ,CAbF,CADF,CADF;AA4CD,CAzDD;;AA2DA,eAAeT,MAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport LoginContext from \"../context/loginContext\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Badge,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const loginContext = useContext(LoginContext);\r\n  const { isLoggedIn, toggleLogIn } = useContext(LoginContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    toggleLogIn();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"info\" expand=\"lg\" fixed=\"top\">\r\n        <NavbarBrand className=\"navbar-brand\" href=\"/\">\r\n          <h4>Content Management System</h4>\r\n        </NavbarBrand>\r\n        <Nav className=\"mr-auto\" navbar></Nav>\r\n\r\n        {loginContext.isLoggedIn ? (\r\n          <Link>\r\n            <NavLink>{localStorage.getItem(\"user\")}</NavLink>\r\n          </Link>\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n        <NavItem>\r\n          {loginContext.isLoggedIn ? (\r\n            <Button color=\"white\" onClick={handleLogout}>\r\n              LOGOUT\r\n            </Button>\r\n          ) : (\r\n            <React.Fragment>\r\n              <ButtonGroup>\r\n                <Button\r\n                  size=\"sm\"\r\n                  color=\"white\"\r\n                  onClick={() => history.push(\"/login\")}\r\n                >\r\n                  LOGIN\r\n                </Button>\r\n                <Button\r\n                  size=\"sm\"\r\n                  color=\"white\"\r\n                  onClick={() => history.push(\"/signup\")}\r\n                >\r\n                  SIGNUP\r\n                </Button>\r\n              </ButtonGroup>\r\n            </React.Fragment>\r\n          )}\r\n        </NavItem>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}